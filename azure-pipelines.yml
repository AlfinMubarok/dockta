# Azure Pipelines config
#
# For docs on building and pushing Docker images
#   https://docs.microsoft.com/azure/devops/pipelines/languages/docker

schedules:
  - cron: "0 0 * * *"
    displayName: Daily builds
    branches:
      include:
        - master
    always: true


jobs:
  - job: test
    strategy:
      matrix:
        linux_node_14:
          node_version: 14.x
        linux_node_12:
          node_version: 12.x
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: Install Node.js $(node_version)

      - script: npm install
        displayName: Install dependencies

      - script: npm run lint
        displayName: Linting

      - script: npm run test:cover -- --testTimeout=120000 --forceExit
        displayName: Run tests

      - script: bash <(curl -s https://codecov.io/bash)
        condition: succeeded()
        displayName: Upload coverage

  - job: release
    dependsOn: [test]
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 14.x
        displayName: 'Install Node.js'

      - script: |
          npm ci
          npm run docs
          npm run build
          npm run images
          npx semantic-release
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          NPM_TOKEN: $(NPM_TOKEN)
        displayName: 'Release docs and package'

  - job: images
    dependsOn: [release]
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    pool:
      vmImage: ubuntu-latest
    timeoutInMinutes: 0
    steps:
      - task: Docker@2
        displayName: stencila/executa-all
        inputs:
          command: buildAndPush
          dockerfile: images/executa-all/Dockerfile
          containerRegistry: DockerHub
          repository: stencila/executa-all
          tags: |
            $(Build.BuildNumber)
            latest

      - task: Docker@2
        displayName: stencila/executa-midi
        inputs:
          command: buildAndPush
          dockerfile: images/executa-midi/.Dockerfile
          containerRegistry: DockerHub
          repository: stencila/executa-midi
          tags: |
            $(Build.BuildNumber)
            latest
